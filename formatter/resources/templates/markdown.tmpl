NMAP Scan Result: {{ .NMAPRun.StartStr }}
==========================================
{{- $displayDownHosts := not .OutputOptions.SkipDownHosts }}
{{- $skipSummary := .OutputOptions.SkipSummary }}
{{- $skipPortScripts := .OutputOptions.SkipPortScripts }}

## TOC

{{- if not $skipSummary }}
* [Scan Summary](#scan-summary)
{{- end }}{{/* if $skipSummary */}}
{{- range .NMAPRun.Host -}}
{{- if or ($displayDownHosts) (eq .Status.State "up") }}
* [{{ md_title . }}](#{{ md_link . }})
{{- end -}}{{/* if or ($displayDownHosts) (eq .Status.State "up") */}}
{{- end -}}{{/* range .Host */}}

{{- if not $skipSummary }}
----

## Scan Summary

| Name | Value |
|----|----|
| Scanner | {{ .NMAPRun.Scanner }} |
| Start time | {{ .NMAPRun.StartStr }} |
| Finished | {{ .NMAPRun.RunStats.Finished.TimeStr }} |
| Elapsed | {{ .NMAPRun.RunStats.Finished.Elapsed }} |
| Version | {{ .NMAPRun.Version }} |
| Type of scan | {{ .NMAPRun.ScanInfo.Type }} |
| Protocol | {{ .NMAPRun.ScanInfo.Protocol }} |
| Number of services | {{ .NMAPRun.ScanInfo.NumServices }} |
| Services | <details><summary>(open)</summary>`{{ md .NMAPRun.ScanInfo.Services }}`</details> |
| Arguments | `{{ md .NMAPRun.Args }}` |
| Verbosity | {{ md .NMAPRun.Verbose.Level }} |
| Debug | {{ .NMAPRun.Debugging.Level }} |
| Exit (success) | {{ .NMAPRun.RunStats.Finished.Exit }} |
| Summary | {{ .NMAPRun.RunStats.Finished.Summary }} |
| Hosts | Up: {{ .NMAPRun.RunStats.Hosts.Up }}, Down: {{ .NMAPRun.RunStats.Hosts.Down }}, Total: {{ .NMAPRun.RunStats.Hosts.Total }} |
{{ end }}{{/* if not $skipSummary */}}
----

{{ range .NMAPRun.Host -}}
{{- if or ($displayDownHosts) (eq .Status.State "up") }}

## {{ md_title . }}

{{- if eq .Status.State "up" }}
### Info:

| Name | Value |
| ---- | ----- |
| Address | {{ .HostAddress.Address }} ({{ .HostAddress.AddressType }}) |
| Hostnames | `{{ range .HostNames.HostName }} / {{ .Name }} ({{ .Type }}){{ else }}N/A{{ end }}` |
{{- if .OS }}
{{- range .OS.OSPortUsed }}
| Used port | **{{ .PortID }}/{{ .Protocol }} ({{ .State }})** |
{{- end -}}{{/* range .OS.OSPortUsed */}}
{{- range .OS.OSMatch }}
| OS | **{{ .Name }} ({{ .Accuracy }}%)** |
{{- else }}{{/* if .OS.OSMatch.Name */}}
| OS | N/A |
{{- end -}}{{/* if .OS.OSMatch.Name */}}
{{ end }}{{/* if .OS */}}

### Ports:

| Port | State | Service | Reason | Product | Version | Extra Info |
| ---- | ----- | ------- | ------ | ------- | ------- | ---------- |
{{ range .Ports.Port -}}
| {{ .PortID }} | {{ .Protocol }} | {{ .State.State }} | {{ .Service.Name }} | {{ .State.Reason }} | {{ .Service.Product }} | {{ .Service.Version }} | {{ .Service.ExtraInfo }} |
{{ end }}{{/* range .Ports.Port */}}
{{ if not $skipPortScripts }}

### Scripts:
{{ range .Ports.Port -}}
{{- if .Script -}}
#### PORT {{ .PortID }}
{{ range .Script }}
**Script ID:** `{{ md .ID }}`

```
{{ noesc .Output }}
```

{{- end -}}{{/* range .Script */}}
{{- end -}}{{/* if .Script */}}
{{ end -}}{{/* if not $skipPortScripts */}}
{{ end -}}{{/* range .Ports.Port */}}
{{- end -}}{{/* if eq .Status.State "up" */}}

----

{{- end -}}{{/* if or ($displayDownHosts) (eq .Status.State "up") */}}

{{- end -}}{{/* range .NMAPRun.Host */}}
